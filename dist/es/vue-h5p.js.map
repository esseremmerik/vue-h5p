{"version":3,"file":"vue-h5p.js","sources":["../../src/errors.js","../../src/l10n.js","../../src/h5p.vue"],"sourcesContent":["class FetchError extends Error {\n  constructor (resp, body) {\n    super(resp.statusText)\n    this.name = 'FetchError'\n    this.resp = resp\n    this.status = resp.status\n    Object.assign(this, body)\n  }\n}\n\nexport {\n  FetchError\n}\n","export default {\n  H5P: {\n    advancedHelp: 'Include this script on your website if you want dynamic sizing of the embedded content:',\n    author: 'Author',\n    by: 'by',\n    cancelLabel: 'Cancel',\n    changes: 'Changelog',\n    close: 'Close',\n    confirmDialogBody: 'Please confirm that you wish to proceed. This action is not reversible.',\n    confirmDialogHeader: 'Confirm action',\n    confirmLabel: 'Confirm',\n    connectionLost: 'Connection lost. Results will be stored and sent when you regain connection.',\n    connectionReestablished: 'Connection reestablished.',\n    contentChanged: 'This content has changed since you last used it.',\n    contentCopied: 'Content is copied to the clipboard',\n    contentType: 'Content Type',\n    copyrightInformation: 'Rights of use',\n    copyrights: 'Rights of use',\n    copyrightsDescription: 'View copyright information for this content.',\n    disableFullscreen: 'Disable fullscreen',\n    download: 'Download',\n    downloadDescription: 'Download this content as a H5P file.',\n    embed: 'Embed',\n    embedDescription: 'View the embed code for this content.',\n    fullscreen: 'Fullscreen',\n    h5pDescription: 'Visit H5P.org to check out more cool content.',\n    hideAdvanced: 'Hide advanced',\n    license: 'License',\n    licenseC: 'Copyright',\n    licenseCC010: 'CC0 1.0 Universal (CC0 1.0) Public Domain Dedication',\n    licenseCC10: '1.0 Generic',\n    licenseCC20: '2.0 Generic',\n    licenseCC25: '2.5 Generic',\n    licenseCC30: '3.0 Unported',\n    licenseCC40: '4.0 International',\n    licenseCCBY: 'Attribution',\n    licenseCCBYNC: 'Attribution-NonCommercial',\n    licenseCCBYNCND: 'Attribution-NonCommercial-NoDerivs',\n    licenseCCBYNCSA: 'Attribution-NonCommercial-ShareAlike',\n    licenseCCBYND: 'Attribution-NoDerivs',\n    licenseCCBYSA: 'Attribution-ShareAlike',\n    licenseExtras: 'License Extras',\n    licenseGPL: 'General Public License',\n    licensePD: 'Public Domain',\n    licensePDM: 'Public Domain Mark',\n    licenseU: 'Undisclosed',\n    licenseV1: 'Version 1',\n    licenseV2: 'Version 2',\n    licenseV3: 'Version 3',\n    noCopyrights: 'No copyright information available for this content.',\n    offlineDialogBody: 'We were unable to send information about your completion of this task. Please check your internet connection.',\n    offlineDialogHeader: 'Your connection to the server was lost',\n    offlineDialogRetryButtonLabel: 'Retry now',\n    offlineDialogRetryMessage: 'Retrying in :num....',\n    offlineSuccessfulSubmit: 'Successfully submitted results.',\n    resubmitScores: 'Attempting to submit stored results.',\n    reuse: 'Reuse',\n    reuseContent: 'Reuse Content',\n    reuseDescription: 'Reuse this content.',\n    showAdvanced: 'Show advanced',\n    showLess: 'Show less',\n    showMore: 'Show more',\n    size: 'Size',\n    source: 'Source',\n    startingOver: 'You\\'ll be starting over.',\n    subLevel: 'Sublevel',\n    thumbnail: 'Thumbnail',\n    title: 'Title',\n    year: 'Year'\n  }\n}\n","<template>\n  <div v-if=\"loading\">\n    <slot />\n  </div>\n  <div v-else-if=\"error\">\n    <slot\n      name=\"error\"\n      :error=\"error\"\n    />\n  </div>\n  <iframe\n    v-else\n    ref=\"iframe\"\n    style=\"width: 100%; height: 100%; border: none;\"\n    :srcdoc=\"srcdoc\"\n    @load=\"addEventHandlers\"\n  />\n</template>\n\n<script>\nimport Toposort from 'toposort-class'\nimport { FetchError } from '@/errors'\nimport l10n from '@/l10n'\nimport frameScript from 'frame/script'\nimport frameStyle from 'frame/style'\n\nexport default {\n  name: 'H5p',\n  props: {\n    src: {\n      type: String,\n      required: true\n    },\n    librariesSrc: {\n      type: String,\n      default: ''\n    },\n    embed: {\n      type: String,\n      default: ''\n    },\n    resize: {\n      type: String,\n      default: ''\n    },\n    export: {\n      type: String,\n      default: ''\n    },\n    copyright: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: Boolean,\n      default: false\n    },\n    fullscreen: {\n      type: Boolean,\n      default: false\n    },\n    l10n: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      loading: true,\n      error: undefined,\n      srcdoc: ''\n    }\n  },\n  computed: {\n    path () {\n      return this.src.endsWith('/') ? this.src.slice(0, -1) : this.src\n    },\n    librariesPath: function path () {\n      // console.log(\"librariesPath\", this.librariesSrc);\n      if (this.librariesSrc == null || this.librariesSrc.length === 0) {\n        return this.path\n      }\n      return this.librariesSrc.endsWith('/') ? this.librariesSrc.slice(0, -1) : this.librariesSrc\n    }\n  },\n  async mounted () {\n    let h5p\n    let content\n    let libraries\n    try {\n      h5p = await this.getJSON('h5p.json')\n      content = await this.getJSON('content', 'content.json')\n      libraries = await this.loadDependencies(h5p.preloadedDependencies)\n    } catch (e) {\n      this.error = e\n      this.loading = false\n      return\n    }\n\n    const { machineName, majorVersion, minorVersion } = h5p.preloadedDependencies.find(dep => dep.machineName === h5p.mainLibrary)\n\n    this.$emit('libraryInfo', { machineName: machineName, majorVersion: majorVersion, minorVersion: minorVersion, versionedName: machineName + ' ' + majorVersion + '.' + minorVersion })\n    const h5pIntegration = {\n      l10n: {\n        H5P: Object.assign({}, l10n.H5P, this.l10n)\n      },\n      url: this.path,\n      contents: {\n        'cid-default': {\n          embedCode: this.embed,\n          resizeCode: this.resize,\n          exportUrl: this.export,\n          fullScreen: this.fullscreen,\n          library: `${machineName} ${majorVersion}.${minorVersion}`,\n          jsonContent: JSON.stringify(content),\n          url: this.path,\n          displayOptions: {\n            frame: Boolean(this.export || this.embed || this.copyright || this.icon),\n            export: Boolean(this.export),\n            embed: Boolean(this.embed),\n            copyright: this.copyright,\n            icon: this.icon\n          }\n        }\n      },\n      _libraryPaths: Object.fromEntries(\n        Object.entries(libraries).map(\n          ([id, lib]) => [id, lib.path]\n        )\n      )\n    }\n\n    const { styles, scripts } = this.sortDependencies(libraries)\n\n    // workaround for vue-loader parsing this as the end of our SFC's script block\n    const endScript = '</' + 'script>'\n    const contentStyles = styles.map(style => `<link rel=\"stylesheet\" href=\"${style}\">`).join('\\n')\n    const contentScripts = scripts.map(script => `<script src=\"${script}\">${endScript}`).join('\\n')\n    this.srcdoc = `<!doctype html>\n<html class=\"h5p-iframe\">\n  <head>\n    <base target=\"_parent\">\n    <style>${frameStyle}</style>\n    ${contentStyles}\n    <script>H5PIntegration = ${JSON.stringify(h5pIntegration)};var H5P = H5P || {};H5P.externalEmbed = true;${endScript}\n    <script>${frameScript}${endScript}\n    ${contentScripts}\n  </head>\n  <body>\n    <div class=\"h5p-content\" data-content-id=\"default\"/>\n  </body>\n</html>`\n\n    this.loading = false\n  },\n  methods: {\n    addEventHandlers () {\n      this.$refs.iframe.contentWindow.H5P.externalDispatcher.on('*', (ev) => {\n        this.$emit(ev.type.toLowerCase(), ev.data)\n      })\n    },\n    async getJSON (...url) {\n      const path = url[0].startsWith('/') ? url.join('/') : this.path + '/' + url.join('/')\n      const resp = await fetch(path, { credentials: 'include' })\n      if (!resp.ok) {\n        let body = {}\n        try {\n          body = await resp.json()\n        } catch { /* eslint-disable-line no-empty */ }\n        throw new FetchError(resp, body)\n      }\n      return resp.json()\n    },\n    async loadDependencies (deps, libraryMap = {}) {\n      await Promise.all(deps.map(async ({ machineName, majorVersion, minorVersion }) => {\n        const id = `${machineName}-${majorVersion}.${minorVersion}`\n        if (libraryMap[id]) return\n        try {\n          libraryMap[id] = {\n            library: await this.getJSON(this.librariesPath, id, 'library.json'),\n            path: id\n          }\n        } catch {\n          libraryMap[id] = {\n            library: await this.getJSON(this.librariesPath, machineName, 'library.json'),\n            path: machineName\n          }\n        }\n        const libDeps = libraryMap[id].library.preloadedDependencies\n        if (libDeps) {\n          this.loadDependencies(libDeps, libraryMap)\n          libraryMap[id].dependencies = libDeps.map(({ machineName, majorVersion, minorVersion }) => `${machineName}-${majorVersion}.${minorVersion}`)\n        }\n      }))\n      return libraryMap\n    },\n    sortDependencies (libraries) {\n      const sorter = new Toposort()\n      Object.entries(libraries)\n        .forEach(([id, { dependencies = [] }]) => sorter.add(id, dependencies))\n      const sorted = sorter.sort().reverse()\n\n      const styles = sorted.map(id => libraries[id])\n        .map(({ path, library }) => library.preloadedCss?.map(file => `${this.librariesPath}/${path}/${file.path}`))\n        .flat(1)\n        .filter(Boolean)\n\n      const scripts = sorted.map(id => libraries[id])\n        .map(({ path, library }) => library.preloadedJs?.map(file => `${this.librariesPath}/${path}/${file.path}`))\n        .flat(1)\n        .filter(Boolean)\n\n      return { styles, scripts }\n    }\n  }\n}\n</script>\n"],"names":[],"mappings":";AAAA,yBAAyB,MAAM;AAAA,EAC7B,YAAa,MAAM,MAAM;AACvB,UAAM,KAAK;AACX,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS,KAAK;AACnB,WAAO,OAAO,MAAM;AAAA;AAAA;ACNxB,WAAe;AAAA,EACb,KAAK;AAAA,IACH,cAAc;AAAA,IACd,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,aAAa;AAAA,IACb,SAAS;AAAA,IACT,OAAO;AAAA,IACP,mBAAmB;AAAA,IACnB,qBAAqB;AAAA,IACrB,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,yBAAyB;AAAA,IACzB,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,aAAa;AAAA,IACb,sBAAsB;AAAA,IACtB,YAAY;AAAA,IACZ,uBAAuB;AAAA,IACvB,mBAAmB;AAAA,IACnB,UAAU;AAAA,IACV,qBAAqB;AAAA,IACrB,OAAO;AAAA,IACP,kBAAkB;AAAA,IAClB,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,SAAS;AAAA,IACT,UAAU;AAAA,IACV,cAAc;AAAA,IACd,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,cAAc;AAAA,IACd,mBAAmB;AAAA,IACnB,qBAAqB;AAAA,IACrB,+BAA+B;AAAA,IAC/B,2BAA2B;AAAA,IAC3B,yBAAyB;AAAA,IACzB,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,UAAU;AAAA,IACV,WAAW;AAAA,IACX,OAAO;AAAA,IACP,MAAM;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}